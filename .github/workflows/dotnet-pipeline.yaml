name: Deploy to GCP VM on Main Branch Update

on:
  push:
    branches:
      - main
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  deploy:
    name: Build, Analyze, and Deploy
    runs-on: ubuntu-latest

    # Conditional run only when the pull request is merged
    if: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true) }}

    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # Step 2: Set up .NET Core SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: dotnet restore

      # Step 4: Publish the application
      - name: Publish application
        run: dotnet publish -c Release -o ./publish

      # Step 5: Create SSH Key File
      - name: Create SSH Key File
        run: |
          echo "${{ secrets.GCP_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      # Step 6: Install .NET SDK on GCP VM
      - name: Install .NET SDK on GCP VM
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_IP }} << 'EOF'
            wget https://packages.microsoft.com/config/ubuntu/22.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb
            sudo dpkg -i packages-microsoft-prod.deb
            sudo apt-get update
            sudo apt-get install -y apt-transport-https
            sudo apt-get update && sudo apt-get install -y dotnet-sdk-7.0
          EOF

      # Step 7: Deploy the application to GCP VM via SCP
      - name: Deploy to GCP VM
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.GCP_VM_IP }}
          username: ${{ secrets.GCP_VM_USER }}
          key: ${{ secrets.GCP_SSH_PRIVATE_KEY }}
          source: "./publish/*"
          target: "/home/${{ secrets.GCP_VM_USER }}/customerapp/"
          debug: true

      # Step 8: Run .NET Application with Debugging
      - name: Run .NET Application with Debugging
        run: |
          ssh -i private_key.pem -o StrictHostKeyChecking=no ${{ secrets.GCP_VM_USER }}@${{ secrets.GCP_VM_IP }} << 'EOF'
            echo "Starting .NET application and binding to 0.0.0.0:5259..." >> /home/${{ secrets.GCP_VM_USER }}/customerapp/app.log
            nohup dotnet /home/${{ secrets.GCP_VM_USER }}/customerapp/publish/CustomerManagementWebApp.dll --urls "http://0.0.0.0:5259" >> /home/${{ secrets.GCP_VM_USER }}/customerapp/app.log 2>&1 &
            sleep 5
            echo "Checking if the application is running..." >> /home/${{ secrets.GCP_VM_USER }}/customerapp/app.log
            pgrep -a dotnet >> /home/${{ secrets.GCP_VM_USER }}/customerapp/app.log || echo "Application failed to start." >> /home/${{ secrets.GCP_VM_USER }}/customerapp/app.log
          EOF
